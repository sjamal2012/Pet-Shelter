"use strict";
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var cookie_options_provider_1 = require("./src/cookie-options-provider");
var cookie_service_1 = require("./src/cookie.service");
var cookie_factory_1 = require("./src/cookie.factory");
__export(require("./src/cookie.service"));
__export(require("./src/cookie-backend.service"));
__export(require("./src/cookie-options-provider"));
__export(require("./src/cookie.factory"));
__export(require("./src/utils"));
var CookieModule = /** @class */ (function () {
    function CookieModule() {
    }
    /**
     * Use this method in your root module to provide the CookieService
     * @param {CookieOptions} options
     * @returns {ModuleWithProviders}
     */
    /**
       * Use this method in your root module to provide the CookieService
       * @param {CookieOptions} options
       * @returns {ModuleWithProviders}
       */
    CookieModule.forRoot = /**
       * Use this method in your root module to provide the CookieService
       * @param {CookieOptions} options
       * @returns {ModuleWithProviders}
       */
    function (options) {
        if (options === void 0) { options = {}; }
        return {
            ngModule: CookieModule,
            providers: [
                { provide: cookie_options_provider_1.COOKIE_OPTIONS, useValue: options },
                { provide: cookie_service_1.CookieService, useFactory: cookie_factory_1.cookieServiceFactory, deps: [cookie_options_provider_1.CookieOptionsProvider] }
            ]
        };
    };
    /**
     * Use this method in your other (non root) modules to import the directive/pipe
     * @param {CookieOptions} options
     * @returns {ModuleWithProviders}
     */
    /**
       * Use this method in your other (non root) modules to import the directive/pipe
       * @param {CookieOptions} options
       * @returns {ModuleWithProviders}
       */
    CookieModule.forChild = /**
       * Use this method in your other (non root) modules to import the directive/pipe
       * @param {CookieOptions} options
       * @returns {ModuleWithProviders}
       */
    function (options) {
        if (options === void 0) { options = {}; }
        return {
            ngModule: CookieModule,
            providers: [
                { provide: cookie_options_provider_1.COOKIE_OPTIONS, useValue: options },
                { provide: cookie_service_1.CookieService, useFactory: cookie_factory_1.cookieServiceFactory, deps: [cookie_options_provider_1.CookieOptionsProvider] }
            ]
        };
    };
    CookieModule.decorators = [
        { type: core_1.NgModule, args: [{
                    providers: [cookie_options_provider_1.CookieOptionsProvider]
                },] },
    ];
    /** @nocollapse */
    CookieModule.ctorParameters = function () { return []; };
    return CookieModule;
}());
exports.CookieModule = CookieModule;
